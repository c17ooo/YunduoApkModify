syntax = "proto3";

package v1.message.device.vehicle.hmi.service;
option go_package = "v1/message/device/vehicle/hmi/service";

import "v1/message/device/vehicle/common.proto";

/**
 * 发送导航路由点信息给到ALAM
 * 结构体: BinaryData
 * topic: /sys/multi_sd_navi_binary/v1
 * 频率: 用户选择目的地时，发送一次
 */

message MultiAMapNaviInfoReq {
    repeated AMapNaviInfoReq navi_info = 1; //多条导航路线（最多3条）
}


/**
 * 给 ALAM
 * 结构体 : BinaryData
 * topic : /sys/sd_navi_binary/v1
 * 给 PL
 * 结构体 : dji_msgs::hal::app::AmapNaviRouteInfo
 * topic : /hal/app/amap_route_info/v1
 * 频率 : 用户选择最终的导航路线并出发时，发送一次
 */
message AMapNaviInfoReq {
    AMapLocation start_point = 1;       //起点信息
    AMapLocation end_point = 2;         //终点信息
    repeated AMapNaviStep steps = 3;    //steps路段信息
    uint64 navi_id = 4;                  //导航路线ID
}

message AMapNaviStep {
    int32 distance = 1;                 //路段长度
    AmapIconType icon_type = 2;         //路段转向信息
    repeated LLAPoint polyline = 3;     //路段经纬度信息，step坐标点集
    repeated AmapNaviLink links = 4;    //step包含的link集
}

message AmapNaviLink {
    AmapLinkType link_type = 1;                //link类型
    AmapRoadClass road_class = 2;              //道路等级
    AmapRoadType road_type = 3;                //道路类型
    repeated LLAPoint link_coords = 4;         //link坐标点集
    int32 link_length = 5;                     //Link道路长度
    string road_name = 6;                      //Link道路名称
}

message AMapLocation {
    LLAPoint position = 1;
    string place_name = 2;  //地名（可能没有数据）
}

/**
 * ALAM根据导航信息返回查询到的可用的CSM(NOD/MOD)路线信息
 * 结构体: BinaryData
 * topic: /sys/multi_sd_navi_binary/v1
 * 频率: 用户选择目的地后，收到AMapMultiNaviInfoReq请求，返回结果发送一次（异步）
 */
message MultiAMapNaviInfoRsp {
    bool result = 1;                                        //是否请求成功
    string detail = 2;                                      //错误信息（reserved）
    repeated CsmTrajectory csm_available_trajectories = 3;  //每一条导航路线对应的CSM可用的路段范围
}

//导航的一个路径对应的CSM结果
message CsmTrajectory {
    uint64 origin_navi_id = 1;          //原始导航路线的id
    repeated PolyLine poly_lines = 2;   //多组折线段
    double total_length = 3;            //路段总长度，单位：m
}

//折线段，可能一条导航路线有多段不连续的CSM可用
message PolyLine {
    repeated LLAPoint pts = 1;  //经度度坐标
}

/**
 * 对应高德的 IconType：https://a.amap.com/lbs/static/unzip/Android_Navi_Doc/com/amap/api/navi/enums/IconType.html
 */
enum AmapIconType {
    ICON_TYPE_NONE = 0;             // 无定义（数值：0）自定义转向图标数组，请忽略这个元素，从左转图标开始
    DEFAULT = 1;                   // 自车图标（数值：1）自定义转向图标数组，请忽略这个元素，从左转图标开始
    LEFT = 2;                      // 左转图标（数值：2）
    RIGHT = 3;                     // 右转图标（数值：3）
    LEFT_FRONT = 4;                // 左前方图标（数值：4）
    RIGHT_FRONT = 5;               // 右前方图标（数值：5）
    LEFT_BACK = 6;                 // 左后方图（数值：6）
    RIGHT_BACK = 7;                // 右后方图标（数值：7）
    LEFT_TURN_AROUND = 8;          // 左转掉头图标（数值：8）
    STRAIGHT = 9;                  // 直行图标（数值：9）
    ARRIVED_WAYPOINT = 10;         // 到达途经点图标（数值：10）
    ENTER_ROUNDABOUT = 11;         // 进入环岛图标（数值：11）
    OUT_ROUNDABOUT = 12;           // 驶出环岛图标（数值：12）
    ARRIVED_SERVICE_AREA = 13;     // 到达服务区图标（数值：13）
    ARRIVED_TOLLGATE = 14;         // 到达收费站图标（数值：14）
    ARRIVED_DESTINATION = 15;      // 到达目的地图标（数值：15）
    ARRIVED_TUNNEL = 16;           // 到达隧道图标（数值：16）
    ENTRY_LEFT_RING = 17;          // 进入环岛，注意，这个是左侧通行地区的顺时针环岛（数值：17）
    LEAVE_LEFT_RING = 18;          // 驶出环岛，注意，这个是左侧通行地区的顺时针环岛（数值：18）
    U_TURN_RIGHT = 19;             // 右转掉头图标 ，注意，这个是左侧通行地区的掉头（数值：19）
    SPECIAL_CONTINUE = 20;         // 顺行图标（数值：20）
    ENTRY_RING_LEFT = 21;          // 标准小环岛,绕环岛左转,右侧通行地区的逆时针环岛（数值：21）
    ENTRY_RING_RIGHT = 22;         // 标准小环岛,绕环岛右转,右侧通行地区的逆时针环岛（数值：22）
    ENTRY_RING_CONTINUE = 23;      // 标准小环岛,绕环岛直行,右侧通行地区的逆时针环岛（数值：23）
    ENTRY_RING_UTURN = 24;         // 标准小环岛,绕环岛调头,右侧通行地区的逆时针环岛（数值：24）
    ENTRY_LEFT_RING_LEFT = 25;     // 标准小环岛,绕环岛左转,左侧通行地区的顺时针环岛（数值：25）
    ENTRY_LEFT_RING_RIGHT = 26;    // 标准小环岛 绕环岛右转，左侧通行地区的顺时针环岛（数值：26）
    ENTRY_LEFT_RING_CONTINUE = 27; // 标准小环岛 绕环岛直行，左侧通行地区的顺时针环岛（数值：27）
    ENTRY_LEFTRINGU_TURN = 28;     // 标准小环岛 绕环岛调头，左侧通行地区的顺时针环岛（数值：28）
    CROSSWALK = 29;                // 通过人行横道图标（数值：29）骑行、步行专有图标
    OVERPASS = 30;                 // 通过过街天桥图标（数值：30）骑行、步行专有图标
    UNDERPASS = 31;                // 通过地下通道图标（数值：31）骑行、步行专有图标
    SQUARE = 32;                   // 通过广场图标（数值：32）骑行、步行专有图标
    PARK = 33;                     // 通过公园图标（数值：33）骑行、步行专有图标
    STAIRCASE = 34;                // 通过扶梯图标（数值：34）骑行、步行专有图标
    LIFT = 35;                     // 通过直梯图标（数值：35）骑行、步行专有图标
    CABLEWAY = 36;                 // 通过索道图标（数值：36）骑行、步行专有图标
    SKY_CHANNEL = 37;              // 通过空中通道图标（数值：37）骑行、步行专有图标
    CHANNEL = 38;                  // 通过通道、建筑物穿越通道图标（数值：38）骑行、步行专有图标
    WALK_ROAD = 39;                // 通过行人道路图标（数值：39）骑行、步行专有图标
    CRUISE_ROUTE = 40;             // 通过游船路线图标（数值：40）骑行、步行专有图标
    SIGHTSEEING_BUSLINE = 41;      // 通过观光车路线图标（数值：41）骑行、步行专有图标
    SLIDEWAY = 42;                 // 通过滑道图标（数值：42）骑行、步行专有图标
    LADDER = 43;                   // 通过阶梯图标（数值：43）骑行、步行专有图标
    SLOPE = 44;                    // 通过斜坡（数值：44）骑行、步行专有图标
    BRIDGE = 45;                   // 通过桥（数值：45）骑行、步行专有图标
    SUBWAY = 47;                   // 通过地铁通道（数值：47）骑行、步行专有图标
    FERRY = 46;                    // 通过轮渡（数值：46）骑行、步行专有图标
    ENTER_BUILDING = 48;           // 进入建筑物（数值：48）骑行、步行专有图标
    LEAVE_BUILDING = 49;           // 离开建筑物（数值：49）骑行、步行专有图标
    BY_ELEVATOR = 50;              // 电梯换层（数值：50）骑行、步行专有图标
    BY_STAIR = 51;                 // 楼梯换层（数值：51）骑行、步行专有图标
    BY_ESCALATOR = 52;             // 扶梯换层（数值：52）骑行、步行专有图标
    LOW_TRAFFIC_CROSS = 53;        // 非导航段通过红绿灯路口（数值：53）骑行、步行专有图标
    LOW_CROSS = 54;                // 非导航段通过普通路口（数值：54）骑行、步行专有图标
}

enum AmapLinkType {
    ORDINARY_TYPE = 0;                    //普通道路
    CHANNEL_TYPE = 1;                     //航道
    TUNNED_TYPE = 2;                      //隧道
    BRIDGE_TYPE = 3;                      //桥梁
    VIADUCT_TYPE = 4;                     //高架桥
}

enum AmapRoadClass {
    HIGHWAY = 0;                     //高速公路
    NATIONALWAY = 1;                 //国道
    PROVINCIALWAY = 2;               //省道
    COUNTYLWAY = 3;                  //县道
    TOWNWAY = 4;                     //乡公路
    COUNTYANDTOWNLWAY = 5;           //县乡村内部道路
    EXPRESSWAY = 6;                  //主要大街、城市快速道
    MAINWAY = 7;                     //主要道路
    MINORWAY = 8;                    //次要道路
    COMMONWAY = 9;                   //普通道路
    NONAVIWAY = 10;                  //非导航道路
}

enum AmapRoadType {
    MAIN_ROAD = 0;                   //主路
    COMPLEX_INTERNAL_ROAD = 1;       //路口内部道路
    OVER_HEAD = 2;                   //高架
    ROUNDABOUT = 3;                  //环岛
    SERVICE_AREA = 4;                //服务区
    RAMP = 5;                        //匝道
    SIDE_ROAD = 6;                   //辅路
    RAMP_AND_OVER_HEAD = 7;          //匝道与高架
    EXIT = 8;                        //出口
    ENTRANCE = 9;                    //入口
    TURN_RIGHT_LINE_A = 10;          //A类右转专用道
    TURN_RIGHT_LINE_B = 11;          //B类右转专用道
    TURN_LEFT_LINE_A = 12;           //A类左转专用道
    TURN_LEFT_LINE_B = 13;           //B类左转专用道
    COMMON = 14;                     //普通道路
    TURN_LEFT_AND_RIGHT = 15;        //左右转专用道
    SERVICE_AREA_AND_RAMP = 16;      //服务区与匝道
    SERVICE_AREA_AND_OVER_HEAD = 17; //服务区与高架
    SERVICE_AREA_AND_RAMP_AND_OVER_HEAD = 18; //服务区与匝道与高架
}
